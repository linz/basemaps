name: Containers

on: [push]

jobs:
  build-containers:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
    steps:
      - uses: linz/action-typescript@v1

      - name: (Prod) Ensure tag exists
        if: github.ref == 'refs/heads/master' && startsWith(github.event.head_commit.message, 'release:')
        run: |
          git fetch --depth=1 origin +refs/tags/*:refs/tags/* # see https://stackoverflow.com/a/60184319/9285308
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          CURRENT_VERSION=$(node -p "require('./lerna.json').version")
          git tag v${CURRENT_VERSION} -m v${CURRENT_VERSION}

      # Package all the files
      - name: Bundle & Package all files
        run: |
          npx lerna run bundle --stream
          npm pack --workspaces
        env:
          NODE_ENV: "production"

      - name: Set up Docker Qemu
        id: qemu
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Set GIT_VERSION
        id: version
        run: |
          GIT_VERSION=$(git describe --tags --always --match 'v*')
          echo "::set-output name=version::${GIT_VERSION}"

      - name: Copy packages
        run: |
          # Files are packed into the base directory
          cp *.tgz packages/server/
          cp *.tgz packages/cli/

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: "@basemaps/cli - Build and push"
        uses: docker/build-push-action@v3
        with:
          context: packages/cli
          platforms: linux/arm64,linux/amd64
          tags: ghcr.io/linz/basemaps/cli:${{ steps.version.outputs.version }}
          push: ${{github.ref == 'refs/heads/master'}}

      - name: "@basemaps/server - Build and push"
        uses: docker/build-push-action@v3
        with:
          context: packages/server
          platforms: linux/arm64,linux/amd64
          tags: ghcr.io/linz/basemaps/server:${{ steps.version.outputs.version }}
          push: ${{github.ref == 'refs/heads/master'}}

      - name: (NonProd) Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.6.1
        with:
          aws-region: ap-southeast-2
          mask-aws-account-id: true
          role-to-assume: ${{ secrets.AWS_ROLE_NON_PROD }}
      
      - name: (Screenshot) Screenshot Pull Request Changes
        run: |
          docker run -v $PWD:$PWD ${DOCKER_AWS_ENV} ghcr.io/linz/basemaps/server:${{ steps.version.outputs.version }} screenshot --config s3://${BASEMAPS_BUCKET}/config-latest.json.gz --assets s3://${BASEMAPS_BUCKET}/assets-latest.tar.co --tiles $PWD/packages/cli/test-tiles/default.test.tiles.json --output $PWD/.artifacts/visual-snapshots

      - name: Save snapshots
        uses: getsentry/action-visual-snapshot@v2
        with:
          save-only: true
          snapshot-path: .artifacts/visual-snapshots

  visual-diff:
    permissions:
      id-token: write
      contents: write
      checks: write
    needs: [build-containers]
    name: validate screenshots
    if: github.ref != 'refs/heads/master' && github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: AWS Configure
        uses: aws-actions/configure-aws-credentials@v1.6.1
        with:
          aws-region: ap-southeast-2
          mask-aws-account-id: true
          role-to-assume: ${{ secrets.AWS_ROLE_SCREENSHOT }}

      - name: Diff snapshots
        id: visual-snapshots-diff
        uses: blacha/action-visual-snapshot@v2
        with:
          storage-prefix: "s3://linz-basemaps-screenshot"
          storage-url: "https://d25mfjh9syaxsr.cloudfront.net"
