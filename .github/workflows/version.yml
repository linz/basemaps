name: "Version"
on: [workflow_dispatch]
jobs:
  version:
    # master-only. ignore commits with `[skip ci]`
    if: ${{ github.ref == 'refs/heads/master' && !contains(github.event.head_commit.message, '[skip ci]') }}

    runs-on: ubuntu-latest
    steps:
      - name: Begin CI...
        uses: actions/checkout@v2
        with:
          # pulls all commits (needed for lerna to correctly version)
          # see https://stackoverflow.com/a/60184319/9285308 & https://github.com/actions/checkout
          fetch-depth: "0"
      # pulls all tags (needed for lerna to correctly version)
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/* # see https://stackoverflow.com/a/60184319/9285308

      # This is all duplicated from './push.yml' does not seem to be a easy way to share logic
      - name: Use Node.js 12.x
        uses: actions/setup-node@v2.1.1
        with:
          node-version: "12.x"
          registry-url: https://registry.npmjs.org

      - name: Check Dependencies
        run: node scripts/detect.unlinked.dep.js

      - name: Install
        run: yarn --frozen-lockfile --check-files

      - name: Audit
        run: npx check-audit --yarn

      - name: Build
        run: yarn run build

      - name: Lint
        run: yarn run lint

      - name: Check Formatting
        run: git diff --exit-code

      - name: Test
        run: yarn run test

      - name: Benchmark
        run: yarn run benchmark

      - name: Deploy - Bundle
        run: npx lerna run bundle --stream

      - name: setup git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      # print what changed
      - run: npx lerna changed -a

      # create new version (& push to github)
      - run: npx lerna version --conventional-commits

      - name: Publish NPM
        run: npx lerna publish from-git --yes
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      # TODO we could conditionally do the deployments using the workflow_dispatch with parameters
      - name: Configure AWS Credentials (Prod)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
          mask-account-id: true
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_PROD }}

      - name: Deploy (Prod)
        run: npx lerna run deploy:deploy --stream
        env:
          ALB_CERTIFICATE_ARN: ${{secrets.ALB_CERTIFICATE_ARN_PROD}}
          CLOUDFRONT_CERTIFICATE_ARN: ${{secrets.CLOUDFRONT_CERTIFICATE_ARN_PROD}}
          NODE_ENV: "production"
          GOOGLE_ANALYTICS: ${{secrets.GOOGLE_ANALYTICS_PROD}}
          API_KEY: ${{secrets.API_KEY_PROD}}
          LOG_ACCOUNT_ID: ${{secrets.LOG_ACCOUNT_ID}}
